# docker-compose down && docker-compose build --pull && docker-compose up -d

version: '3'

services:
  postgres:
    image: postgres:11.4
    hostname: beanies-postgres
    container_name: beanies-postgres
    volumes:
      - /home/bean/app/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: always
 
  # redis:
  #   image: redis:5.0.4-alpine
  #   hostname: beanies-redis
  #   container_name: beanies-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - /home/bean/app/redis:/data
  #   command: ["redis-server", "--appendonly", "yes"]
  #   restart: always

  # Backend API service
  backend:
    image: gcr.io/beanies/backend:latest
    hostname: beanies-backend
    container_name: beanies-backend
    ports:
      - "9090:9090"
    links:
      # - frontend:frontend
      - postgres:postgres
    depends_on:
      - postgres
    restart: always
 
  # Web frontend service
  frontend:
    image: gcr.io/beanies/frontend:latest
    hostname: beanies-frontend
    container_name: beanies-frontend
    ports:
      - "8080:8080"
    links:
      - backend:backend
      - postgres:postgres
    environment:
      # BACKEND
      - BACKEND_ADDRESS=http://backend:9090
    depends_on:
      - backend
    restart: always

  # Allow NGINX proxy to access host network so it can forward requests for
  # executioner service that is running on host level (not inside Docker network).
  dockerhost:
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: on-failure

  proxy:
    image: nginx:1.15.12-alpine
    links:
      - dockerhost:dockerhost
      - backend:backend
      - frontend:frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - dockerhost
      - frontend
    restart: always
