# Local development environment with live reloading for both backend and frontend services.

version: '3'

services:
  postgres:
    image: postgres:11.4
    hostname: beanies-postgres
    container_name: beanies-postgres
    volumes:
      - ~/tmp/beanies/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=123456x@X
    restart: on-failure
  
  pgAdmin:
    image: dpage/pgadmin4
    hostname: beanies-pgadmin
    container_name: beanies-pgadmin
    ports: 
      - 10000:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@local.dev
      - PGADMIN_DEFAULT_PASSWORD=123456x@X
    logging:
      driver: none
    depends_on:
      - postgres
    restart: on-failure
 
  # Backend API service
  backend:
    image: python:3.6
    hostname: beanies-backend
    container_name: beanies-backend
    ports:
      - "9090:9090"
    links:
      - postgres:postgres
    depends_on:
      - postgres
    volumes:
      - ../src/backend:/home/app
    working_dir: /home/app/
    command: [ /bin/bash, -c, "source /home/app/backend-env/bin/activate && pip3 install -r requirements.txt && python3 main.py run" ]
    # command: >
    #   /bin/bash -c "source backend-env/bin/activate && 
    #                 python3 main.py run"
    user: ${CURRENT_UID}
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - BEANIES_ENV=dev
      - FLASK_APP=main.py
      - FLASK_DEBUG=1
      - FLASK_ENV=dev
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=123456x@X
      - POSTGRES_DATABASE=beanies
    restart: on-failure
 
  # Web frontend service
  frontend:
    image: node:10.16-alpine
    hostname: beanies-frontend
    container_name: beanies-frontend
    ports:
      - "8080:8080"
    links:
      - backend:backend
      - postgres:postgres
    volumes:
      - ../src/frontend:/home/app
    working_dir: /home/app/
    command: [ sh, -c, "yarn serve" ]
    user: ${CURRENT_UID}
    environment:
      # BACKEND
      - BACKEND_ADDRESS=http://backend:9090
    depends_on:
      - backend
    restart: on-failure

  # Allow NGINX proxy to access host network so it can forward requests for
  # executioner service that is running on host level (not inside Docker network).
  dockerhost:
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: on-failure

  proxy:
    image: nginx:1.15.12-alpine
    links:
      - dockerhost:dockerhost
      - backend:backend
      - frontend:frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - dockerhost
      - frontend
    restart: on-failure

  # redis:
  #   image: redis:5.0.4-alpine
  #   hostname: beanies-redis
  #   container_name: beanies-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ~/tmp/beanies/redis:/data
  #   command: ["redis-server", "--appendonly", "yes"]
  #   restart: on-failure
